# открытие файлов для чтения и записи
rep = open("report.txt", 'r')
res = open("result.txt", 'w')

file = []  # для хранения строк из файла
line = []  # для хранения отдельной строки
answer = []  # для хранения конечного результата

x = float(rep.readline())  # недельная норма списания

for i in rep:  # чтение строк файла и добавление их в список
    file.append(i.split(' '))  # разбиение строки по пробелам

# словари для хранения данных сотрудников
hours = {}  # общее время списаний для каждого сотрудника
fio = {}  # фамилия и инициалы сотрудника

# обработка каждой строки из списка file
for i in range(len(file)):
    line = list(map(str, file[i]))
    if line[0] in hours:
        hours[line[0]] += float(line[-1])  # если сотрудник уже есть в словаре, добавляем его часы
    else:
        hours[line[0]] = float(line[-1])  # если сотрудника нет в словаре, создаем новую запись
    fio[line[0]] = line[1] + ' ' + line[2][0] + '.' + line[3][0] + '.'  # разбиение строки на фамилию и инициалы

# определение дизбаланса списаний
for i in hours.keys():
    if hours[i] - x > x * 0.1:
        answer.append((fio[i], ' +', hours[i] - x))  # превышение нормы более чем на 10%
    elif hours[i] - x < - x * 0.1:
        answer.append((fio[i], ' ', hours[i] - x))  # недостача нормы более чем на 10%

answer.sort(key=lambda x: (len(x[1]), x[0]))  # сортировка результатов и формирование требуемого вывода

# запись результатов в файл
for i in answer:
    res.write(i[0] + i[1] + str(i[2]) + '\n')

# закрытие файлов
rep.close()
res.close()
